#include <iostream>
#include<iomanip>

using namespace std;
int emp_num,  total_emp=0;
int choice;

struct date{
    int dd,mm,yyy;
};

struct payment{
  float basicSalary;
    float overTime;
    float incomeTax;
    float netPay;
    };

struct address{
  string city, phoneNumber;
};

struct Employee{
  string full_name, edu_level, category;
  int age;
  int phon_num, empId, experience;
  //string category;
  char sex;
    date currentDate, startingDate;
    payment pay;
    address empAddress;
};
//function diclation

Employee dataIn(Employee emp[]);
Employee dataDisp(Employee *emp);
void Search(Employee *emp);
void update(Employee *emp);
void Delete(Employee* emp);
void menu();


int main()
{
    system("cls");
     cout<<"=======================================================\n";
    cout<<"**********      Employee management system    **********\n";
    cout<<"=======================================================\n";
    
    cout<<"how many employs want to sign up ?\n";
         cin>>emp_num;
    Employee emp[emp_num];
      dataIn(emp);

    do {

    menu();

    switch(choice){
        case 1: // data in
        cout<<"how many people do you want to add \n";
                  cin>>emp_num;
           dataIn(emp);
         break;
        case 2: // data display
              dataDisp(emp);
         break;
        case 3: //data modify
             update(emp);
          break;
        case 4: // delete data
               Delete(emp);
           break;
        case 5: // search data
             Search(emp);
            break;
        case 6: // sorting data
            
           break;

         default : cout<<"ERROR: YOU ENTER UNKNOWN KEY....";
         }
         }while(choice!=0);


    return 0;
}
Employee dataIn(Employee *emp)
{

    for (int i=total_emp; i<emp_num + total_emp; i++){
    cout<< "insert the detail of Employee : \n";
      emp[i].empId = i+1;
    cout<< "Enter the name of the user: "<< endl;
      cin.ignore();
      getline(cin,emp[i].full_name);
    cout<<"enter age : ";
      cin>>emp[i].age;
a: cout<<"enter sex 'm' or 'f' : ";
      cin>>emp[i].sex;
      if(emp[i].sex!='m' && emp[i].sex!='f'){
        cout<<"invalid input \n";
        goto a;}
    cout<< "Enter your start date in the organization for employee: "<< emp[i].empId;
    cout<< "\n date: ";
      cin>>emp[i].startingDate.dd;
    cout<< "\n month: ";
      cin>> emp[i].startingDate.mm;
    cout<< "\n year: ";
      cin>> emp[i].startingDate.yyy;
    cout<<"Basic salary : ";
       cin>>emp[i].pay.basicSalary;
    cout<<"over time : ";
      cin>>emp[i].pay.overTime;
    cout<<"address : ";
      cin>>emp[i].empAddress.city;
    cout<<"phone number : ";
      cin>>emp[i].empAddress.phoneNumber;
    }

    total_emp += emp_num;
    return *emp;
}
void menu()
{
    cout<<"========================================\n";
    cout<<"******what do you want to perform******* \n";
    cout<<"========================================\n";

    cout<<"enter 1 for add employees \n";
    cout<<"enter 2 for display inputs \n";
    cout<<"enter 3 for  update \n";
    cout<<"enter 4 for delete \n";
    cout<<"enter 5 for search by id \n";
    cout<<"enter 6 for sort by salary \n";
    cout<<"enter any key to exit \n";
    cin>>choice;
}

Employee dataDisp(Employee *emp)
{
    cout<<setw(2)<<"ID"<<setw(15)<<"Name"<<setw(15)<< "SEX"<<setw(15)<<"AGE"<< setw(15)<<"EXPERIENCE"<<setw(15)<<"SALARY"<<endl;

    for (int i=0; i<total_emp; i++){
    emp[i].empId = i+1;
    //emp[i].experience =currentDate.yy - emp[i].Date.yy;
    cout<<emp[i].empId<< setw(15)<<emp[i].full_name<< setw(15)<<emp[i].sex<< setw(15)<<emp[i].age<<setw(15)
    <<emp[i].pay.basicSalary<<endl;
    }


    return *emp;
}

void Delete(Employee* emp)
{
    if(total_emp!=0){
      char select;
   cout<<"\nPress 1 to delete all records !!\n";
   cout<<"\nPress 2 to delete specific record !!\n";
   cin>>select;
      //select=getch();
      if(select=='1'){
    total_emp=0;
    cout<<"\nAll records are deleted...!!! \n";
      }
      else if(select=='2'){
    cout<<"\nEnter the id number of an employee you want to delete : ";
          cin>>id;
  for(int i=0;i<total_emp;i++){
   if(id==emp[i].empId){
  emp[i].full_name="--";
  emp[i].age=0;
  emp[i].pay.basicSalary=0;
  emp[i].sex='-';
  emp[i].startingDate.dd=0;
  emp[i].startingDate.mm=0;
  emp[i].startingDate.yyy=0;
  emp[i].pay.overTime=0;
  emp[i].empAddress.city="--";
  emp[i].empAddress.phoneNumber="---";
  //emp[i].edu_level="--";
  //emp[i].id="--";
      }
   }

   }
    }
    else
  cout<<"\nYour record is empty \n";
}

//upding function to change specific item by searching by employee id

void update(Employee *emp)
{ if(total_emp!=0){
    cout<<"\nEnter the id number of an employee you want to update : ";
      cin>>id;
    for(int i=0;i<total_emp;i++){
	 if(id==emp[i].empId){
       for (int i=total_emp; i<emp_num + total_emp; i++){
    cout<< "insert the detail of Employee : \n";
      emp[i].empId = i+1;
    cout<< "Enter the name of the user: "<< endl;
      cin.ignore();
      getline(cin,emp[i].full_name);
    cout<<"enter age : ";
      cin>>emp[i].age;
a: cout<<"enter sex 'm' or 'f' : ";
      cin>>emp[i].sex;
      if(emp[i].sex!='m' && emp[i].sex!='f'){
        cout<<"invalid input \n";
        goto a;}
    cout<< "Enter your start date in the organization for employee: "<< emp[i].empId;
    cout<< "\n date: ";
      cin>>emp[i].startingDate.dd;
    cout<< "\n month: ";
      cin>> emp[i].startingDate.mm;
    cout<< "\n year: ";
      cin>> emp[i].startingDate.yyy;
    cout<<"Basic salary : ";
       cin>>emp[i].pay.basicSalary;
    cout<<"over time : ";
      cin>>emp[i].pay.overTime;
    cout<<"address : ";
      cin>>emp[i].empAddress.city;
    cout<<"phone number : ";
      cin>>emp[i].empAddress.phoneNumber;
    cout<<"\nSuccessfully Updated!!\n";
	 }
	 }
}
}
else
    cout<<"\nYour record is empty \n";
}

//searching function work by employee id 

void Search(Employee *emp)
{
    if(total_emp!=0){
    cout<<"\nEnter the id number of an employee you want to search : ";
      cin>>id;

    cout<<setw(2)<<"ID"<<setw(15)<<"Name"<<setw(15)<< "SEX"<<setw(15)<<"AGE"<< setw(15)<<"EXPERIENCE"<<setw(15)<<"SALARY"<<endl;
    for(int i=0;i<total_emp;i++){
	 if(id==emp[i].empId){
    cout<<emp[i].empId<< setw(15)<<emp[i].full_name<< setw(15)<<emp[i].sex<< setw(15)<<emp[i].age<<setw(15)
    <<emp[i].pay.basicSalary<<endl;
	 }
}
    }
    else
        cout<<"no recored is found \n";
}

